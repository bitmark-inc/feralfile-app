name: Deploy the iOS app
on:
  # Enable manual run
  workflow_dispatch:
    inputs:
      lane:
        type: choice
        description: 'Fastlane lane to use'
        required: true
        options:
        - ciappcenter
        - citestflight
        default: 'ciappcenter'
      version:
          description: 'App version'
          required: true
      testnet:
        type: boolean
        default: false
        required: false
        description: Network is Testnet

jobs:
  fastlane-deploy:
    runs-on: macOS-latest
    steps:
      # Set up Flutter.
      - name: Clone Flutter repository with master channel
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
          cache-key: flutter # optional, change this to force refresh cache
          cache-path: ${{ runner.tool_cache }}/flutter

      # Checkout code and get packages.
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup Ruby, Bundler, and Gemfile dependencies
      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.6'
          bundler-cache: true
          working-directory: ios

      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.KEY_VAULT_DEPLOYMENT_KEY }}

      - name: Create env file
        run: |
          touch .env
          echo INDEXER_MAINNET_API_URL=${{ secrets.INDEXER_MAINNET_API_URL }} >> .env
          echo INDEXER_TESTNET_API_URL=${{ secrets.INDEXER_TESTNET_API_URL }} >> .env
          echo WEB3_RPC_MAINNET_URL=${{ secrets.WEB3_RPC_MAINNET_URL }} >> .env
          echo WEB3_RPC_TESTNET_URL=${{ secrets.WEB3_RPC_TESTNET_URL }} >> .env
          echo TEZOS_NODE_CLIENT_MAINNET_URL=${{ secrets.TEZOS_NODE_CLIENT_MAINNET_URL }} >> .env
          echo TEZOS_NODE_CLIENT_TESTNET_URL=${{ secrets.TEZOS_NODE_CLIENT_TESTNET_URL }} >> .env
          echo BITMARK_API_MAINNET_URL=${{ secrets.BITMARK_API_MAINNET_URL }} >> .env
          echo BITMARK_API_TESTNET_URL=${{ secrets.BITMARK_API_TESTNET_URL }} >> .env
          echo FERAL_FILE_API_MAINNET_URL=${{ secrets.FERAL_FILE_API_MAINNET_URL }} >> .env
          echo FERAL_FILE_API_TESTNET_URL=${{ secrets.FERAL_FILE_API_TESTNET_URL }} >> .env
          echo EXTENSION_SUPPORT_MAINNET_URL=${{ secrets.EXTENSION_SUPPORT_MAINNET_URL }} >> .env
          echo EXTENSION_SUPPORT_TESTNET_URL=${{ secrets.EXTENSION_SUPPORT_TESTNET_URL }} >> .env
          echo CONNECT_WEBSOCKET_MAINNET_URL=${{ secrets.CONNECT_WEBSOCKET_MAINNET_URL }} >> .env
          echo CONNECT_WEBSOCKET_TESTNET_URL=${{ secrets.CONNECT_WEBSOCKET_TESTNET_URL }} >> .env

          echo AUTONOMY_AUTH_URL=${{ secrets.AUTONOMY_AUTH_URL }} >> .env
          echo CUSTOMER_SUPPORT_URL=${{ secrets.CUSTOMER_SUPPORT_URL }} >> .env
          echo CURRENCY_EXCHANGE_URL=${{ secrets.CURRENCY_EXCHANGE_URL }} >> .env
          echo RENDERING_REPORT_URL=${{ secrets.RENDERING_REPORT_URL }} >> .env
          echo FEED_URL=${{ secrets.FEED_URL }} >> .env
          echo AUTONOMY_PUBDOC_URL=${{ secrets.AUTONOMY_PUBDOC_URL }} >> .env
          echo AUTONOMY_IPFS_PREFIX=${{ secrets.AUTONOMY_IPFS_PREFIX }} >> .env

          echo FERAL_FILE_AUTHORIZATION_PREFIX=${{ secrets.FERAL_FILE_AUTHORIZATION_PREFIX }} >> .env
          echo SENTRY_DSN=${{ secrets.SENTRY_DSN }} >> .env
          echo ONESIGNAL_APP_ID=${{ secrets.ONESIGNAL_APP_ID }} >> .env
          echo AWS_IDENTITY_POOL_ID=${{ secrets.AWS_IDENTITY_POOL_ID }} >> .env
          echo AUTONOMY_SHARD_SERVICE=${{ secrets.AUTONOMY_SHARD_SERVICE }} >> .env

          echo APP_TESTNET_CONFIG=${{ github.event.inputs.testnet }} >> .env
          cat .env

      - name: Flutter doctor
        run: flutter doctor

      # Get flutter dependencies.
      - run: flutter pub get

      # Precache to fix iOS pod install issue
      - run: flutter precache --ios

      - name: cache pods
        uses: actions/cache@v1
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: pod install
        if: steps.cache-cocoapods.outputs.cache-hit != 'true'
        run: |
          cd ios/
          flutter clean
          flutter pub get
          rm -rf Podfile.lock
          pod install

      - uses: mathieu-bour/setup-sentry-cli@main

      # Build and deploy with Fastlane (by default, to ciappcenter track) ðŸš€.
      - name: Build and deploy with Fastlane
        env:
          ENTERPRISE_CERTIFICATE_PASSWORD: ${{ secrets.ENTERPRISE_CERTIFICATE_PASSWORD }}
          APPSTORE_CERTIFICATE_PASSWORD: ${{ secrets.APPSTORE_CERTIFICATE_PASSWORD }}
          JSON_FILE: ${{ secrets.JSON_FILE }}
          SENTRY_AUTH: ${{ secrets.SENTRY_AUTH }}
          APPCENTER_API_TOKEN: ${{ secrets.APPCENTER_API_TOKEN }}
          APP_VERSION: ${{ github.event.inputs.version }}

        run: |
          git clone git@github.com:bitmark-inc/mobile-signing-key-vault.git --depth 1
          echo $JSON_FILE >> key.json
          bundle exec fastlane install_plugins
          echo "APP_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          bundle exec fastlane ${{ github.event.inputs.lane || 'ciappcenter' }}
        
        working-directory: ios