name: Deploy the android app
on:
  workflow_dispatch:
    inputs:
      version:
        description: Build version (eg 0.30.0)
        required: true
      build-number:
        description: Build number
        required: true
      message:
        description: Change logs
        required: false
      testnet:
        type: boolean
        default: false
        required: false
        description: Using testnet (Default staging)
jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "17"
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.19.0"
          channel: stable
      - name: Set env
        run: |
          echo "FLUTTER_VERSION_NAME=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          echo "FLUTTER_VERSION_CODE=${{ github.event.inputs.build-number }}" >> $GITHUB_ENV
          echo "BRANCH_KEY=${{ secrets.BRANCH_KEY }}" >> $GITHUB_ENV
          echo "BRANCH_KEY_TEST=${{ secrets.BRANCH_KEY_TEST }}" >> $GITHUB_ENV
          echo "SIGNATURE_HASH=${{ secrets.SIGNATURE_HASH }}" >> $GITHUB_ENV
          echo "SIGNATURE_HASH_INHOUSE=${{ secrets.SIGNATURE_HASH_INHOUSE }}" >> $GITHUB_ENV
          ${{ github.event.inputs.testnet == 'true' }} && echo APPCENTER_APP_ID=support-zzd0-28/Autonomy-Android-Test >> $GITHUB_ENV || echo APPCENTER_APP_ID=support-zzd0-28/Autonomy-Android-1 >> $GITHUB_ENV
          ${{ github.event.inputs.testnet == 'true' }} && echo NAME_SUFFIX=test-${{ github.event.inputs.build-number }} >> $GITHUB_ENV || echo NAME_SUFFIX=main-${{ github.event.inputs.build-number }} >> $GITHUB_ENV

      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_ASSETS_KEY }}

      - name: Create env file
        run: |
          touch .env
          ${{ inputs.testnet == true }} && echo -e "${{ secrets.DEV_ENV }}" | sed 's/\\n/\n/g' >> .env || echo -e "${{ secrets.STAGING_ENV }}" | sed 's/\\n/\n/g' >> .env
          cat .env

      - name: Create env secret file
        run: |
          touch .env.secret
          ${{ inputs.testnet == true }} && echo -e "${{ secrets.DEV_ENV_SECRET }}" | sed 's/\\n/\n/g' >> .env.secret || echo -e "${{ secrets.STAGING_ENV_SECRET }}" | sed 's/\\n/\n/g' >> .env.secret
          cat .env.secret

      - name: Submoudles update
        run: git -c submodule.auto-test.update=none submodule update --init --recursive
      - run: flutter pub cache repair
      - run: flutter pub get

      # Encrypt secrets before use
      - name: Encrypt Secrets
        run: |
          ./script/encrypt_secrets.sh ${{ secrets.ENTROPY }}

      - run: flutter build apk --flavor inhouse
      - run: mv build/app/outputs/flutter-apk/app-inhouse-release.apk build/app/outputs/flutter-apk/app-inhouse-release-${{ env.NAME_SUFFIX }}.apk
      - name: Distribute apk to App Center
        uses: akiojin/appcenter-distribute-github-action@v1
        with:
          token: ${{ secrets.APPCENTER_API_TOKEN }}
          path: build/app/outputs/flutter-apk/app-inhouse-release-${{ env.NAME_SUFFIX }}.apk
          app: ${{ env.APPCENTER_APP_ID }}
          silent: false
          group: "Collaborators,Bitmark Internal Testers"
          release_notes: ${{ github.event.inputs.message }}
