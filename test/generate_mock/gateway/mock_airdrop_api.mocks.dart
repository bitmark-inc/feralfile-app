// Mocks generated by Mockito 5.4.2 from annotations
// in autonomy_flutter/test/generate_mock/gateway/mock_airdrop_api.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:autonomy_flutter/gateway/airdrop_api.dart' as _i4;
import 'package:autonomy_flutter/model/ff_account.dart' as _i3;
import 'package:autonomy_flutter/service/airdrop_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAirdropRequestClaimResponse_0 extends _i1.SmartFake
    implements _i2.AirdropRequestClaimResponse {
  _FakeAirdropRequestClaimResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTokenClaimResponse_1 extends _i1.SmartFake
    implements _i3.TokenClaimResponse {
  _FakeTokenClaimResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAirdropClaimShareResponse_2 extends _i1.SmartFake
    implements _i2.AirdropClaimShareResponse {
  _FakeAirdropClaimShareResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAirdropShareResponse_3 extends _i1.SmartFake
    implements _i2.AirdropShareResponse {
  _FakeAirdropShareResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AirdropApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockAirdropApi extends _i1.Mock implements _i4.AirdropApi {
  MockAirdropApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.AirdropRequestClaimResponse> requestClaim(
          _i2.AirdropRequestClaimRequest? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestClaim,
          [body],
        ),
        returnValue: _i5.Future<_i2.AirdropRequestClaimResponse>.value(
            _FakeAirdropRequestClaimResponse_0(
          this,
          Invocation.method(
            #requestClaim,
            [body],
          ),
        )),
      ) as _i5.Future<_i2.AirdropRequestClaimResponse>);
  @override
  _i5.Future<_i3.TokenClaimResponse> claim(_i2.AirdropClaimRequest? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #claim,
          [body],
        ),
        returnValue:
            _i5.Future<_i3.TokenClaimResponse>.value(_FakeTokenClaimResponse_1(
          this,
          Invocation.method(
            #claim,
            [body],
          ),
        )),
      ) as _i5.Future<_i3.TokenClaimResponse>);
  @override
  _i5.Future<_i2.AirdropClaimShareResponse> claimShare(String? shareCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #claimShare,
          [shareCode],
        ),
        returnValue: _i5.Future<_i2.AirdropClaimShareResponse>.value(
            _FakeAirdropClaimShareResponse_2(
          this,
          Invocation.method(
            #claimShare,
            [shareCode],
          ),
        )),
      ) as _i5.Future<_i2.AirdropClaimShareResponse>);
  @override
  _i5.Future<_i2.AirdropShareResponse> share(
    String? tokenId,
    _i2.AirdropShareRequest? body,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #share,
          [
            tokenId,
            body,
          ],
        ),
        returnValue: _i5.Future<_i2.AirdropShareResponse>.value(
            _FakeAirdropShareResponse_3(
          this,
          Invocation.method(
            #share,
            [
              tokenId,
              body,
            ],
          ),
        )),
      ) as _i5.Future<_i2.AirdropShareResponse>);
}
