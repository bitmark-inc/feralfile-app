// Mocks generated by Mockito 5.4.4 from annotations
// in autonomy_flutter/test/generate_mock/service/mock_account_service.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:autonomy_flutter/database/entity/connection.dart' as _i4;
import 'package:autonomy_flutter/database/entity/wallet_address.dart' as _i7;
import 'package:autonomy_flutter/screen/bloc/scan_wallet/scan_wallet_state.dart'
    as _i11;
import 'package:autonomy_flutter/service/account_service.dart' as _i5;
import 'package:autonomy_flutter/util/constants.dart' as _i8;
import 'package:autonomy_flutter/util/wallet_storage_ext.dart' as _i3;
import 'package:autonomy_flutter/util/wallet_utils.dart' as _i9;
import 'package:libauk_dart/libauk_dart.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:nft_collection/models/models.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWalletStorage_0 extends _i1.SmartFake implements _i2.WalletStorage {
  _FakeWalletStorage_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWalletIndex_1 extends _i1.SmartFake implements _i3.WalletIndex {
  _FakeWalletIndex_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConnection_2 extends _i1.SmartFake implements _i4.Connection {
  _FakeConnection_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AccountService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccountService extends _i1.Mock implements _i5.AccountService {
  MockAccountService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<void> migrateAccount(
          _i6.Future<dynamic> Function()? createLoginJwt) =>
      (super.noSuchMethod(
        Invocation.method(
          #migrateAccount,
          [createLoginJwt],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  List<_i7.WalletAddress> getWalletsAddress(_i8.CryptoType? cryptoType) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWalletsAddress,
          [cryptoType],
        ),
        returnValue: <_i7.WalletAddress>[],
      ) as List<_i7.WalletAddress>);
  @override
  _i6.Future<_i2.WalletStorage> getDefaultAccount() => (super.noSuchMethod(
        Invocation.method(
          #getDefaultAccount,
          [],
        ),
        returnValue: _i6.Future<_i2.WalletStorage>.value(_FakeWalletStorage_0(
          this,
          Invocation.method(
            #getDefaultAccount,
            [],
          ),
        )),
      ) as _i6.Future<_i2.WalletStorage>);
  @override
  _i6.Future<_i3.WalletIndex> getAccountByAddress({
    required String? chain,
    required String? address,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAccountByAddress,
          [],
          {
            #chain: chain,
            #address: address,
          },
        ),
        returnValue: _i6.Future<_i3.WalletIndex>.value(_FakeWalletIndex_1(
          this,
          Invocation.method(
            #getAccountByAddress,
            [],
            {
              #chain: chain,
              #address: address,
            },
          ),
        )),
      ) as _i6.Future<_i3.WalletIndex>);
  @override
  _i6.Future<dynamic> androidBackupKeys() => (super.noSuchMethod(
        Invocation.method(
          #androidBackupKeys,
          [],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
  @override
  _i6.Future<dynamic> deleteAllKeys() => (super.noSuchMethod(
        Invocation.method(
          #deleteAllKeys,
          [],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
  @override
  _i6.Future<List<_i4.Connection>> removeDoubleViewOnly(
          List<String>? addresses) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeDoubleViewOnly,
          [addresses],
        ),
        returnValue: _i6.Future<List<_i4.Connection>>.value(<_i4.Connection>[]),
      ) as _i6.Future<List<_i4.Connection>>);
  @override
  _i6.Future<bool?> isAndroidEndToEndEncryptionAvailable() =>
      (super.noSuchMethod(
        Invocation.method(
          #isAndroidEndToEndEncryptionAvailable,
          [],
        ),
        returnValue: _i6.Future<bool?>.value(),
      ) as _i6.Future<bool?>);
  @override
  _i6.Future<_i2.WalletStorage> createNewWallet({
    String? name = r'',
    String? passphrase = r'',
    _i6.Future<dynamic> Function()? createLoginJwt,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNewWallet,
          [],
          {
            #name: name,
            #passphrase: passphrase,
            #createLoginJwt: createLoginJwt,
          },
        ),
        returnValue: _i6.Future<_i2.WalletStorage>.value(_FakeWalletStorage_0(
          this,
          Invocation.method(
            #createNewWallet,
            [],
            {
              #name: name,
              #passphrase: passphrase,
              #createLoginJwt: createLoginJwt,
            },
          ),
        )),
      ) as _i6.Future<_i2.WalletStorage>);
  @override
  _i6.Future<_i2.WalletStorage> importWords(
    String? words,
    String? passphrase, {
    _i9.WalletType? walletType = _i9.WalletType.MultiChain,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #importWords,
          [
            words,
            passphrase,
          ],
          {#walletType: walletType},
        ),
        returnValue: _i6.Future<_i2.WalletStorage>.value(_FakeWalletStorage_0(
          this,
          Invocation.method(
            #importWords,
            [
              words,
              passphrase,
            ],
            {#walletType: walletType},
          ),
        )),
      ) as _i6.Future<_i2.WalletStorage>);
  @override
  _i6.Future<_i4.Connection> nameLinkedAccount(
    _i4.Connection? connection,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #nameLinkedAccount,
          [
            connection,
            name,
          ],
        ),
        returnValue: _i6.Future<_i4.Connection>.value(_FakeConnection_2(
          this,
          Invocation.method(
            #nameLinkedAccount,
            [
              connection,
              name,
            ],
          ),
        )),
      ) as _i6.Future<_i4.Connection>);
  @override
  _i6.Future<_i4.Connection> linkManuallyAddress(
    String? address,
    _i8.CryptoType? cryptoType, {
    String? name,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkManuallyAddress,
          [
            address,
            cryptoType,
          ],
          {#name: name},
        ),
        returnValue: _i6.Future<_i4.Connection>.value(_FakeConnection_2(
          this,
          Invocation.method(
            #linkManuallyAddress,
            [
              address,
              cryptoType,
            ],
            {#name: name},
          ),
        )),
      ) as _i6.Future<_i4.Connection>);
  @override
  _i6.Future<dynamic> deleteLinkedAccount(_i4.Connection? connection) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteLinkedAccount,
          [connection],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
  @override
  _i6.Future<dynamic> linkIndexerTokenID(String? indexerTokenID) =>
      (super.noSuchMethod(
        Invocation.method(
          #linkIndexerTokenID,
          [indexerTokenID],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
  @override
  _i6.Future<dynamic> setHideLinkedAccountInGallery(
    String? address,
    bool? isEnabled,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setHideLinkedAccountInGallery,
          [
            address,
            isEnabled,
          ],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
  @override
  _i6.Future<dynamic> setHideAddressInGallery(
    List<String>? addresses,
    bool? isEnabled,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setHideAddressInGallery,
          [
            addresses,
            isEnabled,
          ],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
  @override
  _i6.Future<List<String>> getAllAddresses({bool? logHiddenAddress = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllAddresses,
          [],
          {#logHiddenAddress: logHiddenAddress},
        ),
        returnValue: _i6.Future<List<String>>.value(<String>[]),
      ) as _i6.Future<List<String>>);
  @override
  _i6.Future<List<String>> getAddress(
    String? blockchain, {
    bool? withViewOnly = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAddress,
          [blockchain],
          {#withViewOnly: withViewOnly},
        ),
        returnValue: _i6.Future<List<String>>.value(<String>[]),
      ) as _i6.Future<List<String>>);
  @override
  _i6.Future<List<_i10.AddressIndex>> getHiddenAddressIndexes() =>
      (super.noSuchMethod(
        Invocation.method(
          #getHiddenAddressIndexes,
          [],
        ),
        returnValue:
            _i6.Future<List<_i10.AddressIndex>>.value(<_i10.AddressIndex>[]),
      ) as _i6.Future<List<_i10.AddressIndex>>);
  @override
  _i6.Future<List<String>> getShowedAddresses() => (super.noSuchMethod(
        Invocation.method(
          #getShowedAddresses,
          [],
        ),
        returnValue: _i6.Future<List<String>>.value(<String>[]),
      ) as _i6.Future<List<String>>);
  @override
  _i6.Future<bool> addAddressWallet(
    String? uuid,
    List<_i11.AddressInfo>? addresses,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAddressWallet,
          [
            uuid,
            addresses,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);
  @override
  _i6.Future<void> deleteAddressWallet(_i7.WalletAddress? walletAddress) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAddressWallet,
          [walletAddress],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  _i6.Future<_i7.WalletAddress?> getWalletByAddress(String? address) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWalletByAddress,
          [address],
        ),
        returnValue: _i6.Future<_i7.WalletAddress?>.value(),
      ) as _i6.Future<_i7.WalletAddress?>);
  @override
  _i6.Future<void> updateAddressWallet(_i7.WalletAddress? walletAddress) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAddressWallet,
          [walletAddress],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);
  @override
  List<_i4.Connection> getAllViewOnlyAddresses() => (super.noSuchMethod(
        Invocation.method(
          #getAllViewOnlyAddresses,
          [],
        ),
        returnValue: <_i4.Connection>[],
      ) as List<_i4.Connection>);
  @override
  _i6.Future<List<_i7.WalletAddress>> insertNextAddress(
    _i9.WalletType? walletType, {
    String? name,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertNextAddress,
          [walletType],
          {#name: name},
        ),
        returnValue:
            _i6.Future<List<_i7.WalletAddress>>.value(<_i7.WalletAddress>[]),
      ) as _i6.Future<List<_i7.WalletAddress>>);
  @override
  _i6.Future<List<_i7.WalletAddress>> insertNextAddressFromUuid(
    String? uuid,
    _i9.WalletType? walletType, {
    String? name,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertNextAddressFromUuid,
          [
            uuid,
            walletType,
          ],
          {#name: name},
        ),
        returnValue:
            _i6.Future<List<_i7.WalletAddress>>.value(<_i7.WalletAddress>[]),
      ) as _i6.Future<List<_i7.WalletAddress>>);
  @override
  _i6.Future<List<_i7.WalletAddress>> insertAddressAtIndexAndUuid(
    String? uuid, {
    required _i9.WalletType? walletType,
    required int? index,
    String? name,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertAddressAtIndexAndUuid,
          [uuid],
          {
            #walletType: walletType,
            #index: index,
            #name: name,
          },
        ),
        returnValue:
            _i6.Future<List<_i7.WalletAddress>>.value(<_i7.WalletAddress>[]),
      ) as _i6.Future<List<_i7.WalletAddress>>);
  @override
  _i6.Future<String?> getBackupDeviceID() => (super.noSuchMethod(
        Invocation.method(
          #getBackupDeviceID,
          [],
        ),
        returnValue: _i6.Future<String?>.value(),
      ) as _i6.Future<String?>);
}
