// Mocks generated by Mockito 5.4.2 from annotations
// in autonomy_flutter/test/generate_mock/service/mock_tezos_service.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:typed_data' as _i6;

import 'package:autonomy_flutter/service/tezos_service.dart' as _i3;
import 'package:libauk_dart/libauk_dart.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tezart/tezart.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeOperation_0 extends _i1.SmartFake implements _i2.Operation {
  _FakeOperation_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TezosService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTezosService extends _i1.Mock implements _i3.TezosService {
  MockTezosService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<int> getBalance(String? address) => (super.noSuchMethod(
        Invocation.method(
          #getBalance,
          [address],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);
  @override
  _i4.Future<int> estimateOperationFee(
    String? publicKey,
    List<_i2.Operation>? operations, {
    int? baseOperationCustomFee,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #estimateOperationFee,
          [
            publicKey,
            operations,
          ],
          {#baseOperationCustomFee: baseOperationCustomFee},
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);
  @override
  _i4.Future<int> estimateFee(
    String? publicKey,
    String? to,
    int? amount, {
    int? baseOperationCustomFee,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #estimateFee,
          [
            publicKey,
            to,
            amount,
          ],
          {#baseOperationCustomFee: baseOperationCustomFee},
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);
  @override
  _i4.Future<String?> sendOperationTransaction(
    _i5.WalletStorage? wallet,
    int? index,
    List<_i2.Operation>? operations, {
    int? baseOperationCustomFee,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendOperationTransaction,
          [
            wallet,
            index,
            operations,
          ],
          {#baseOperationCustomFee: baseOperationCustomFee},
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);
  @override
  _i4.Future<String?> sendTransaction(
    _i5.WalletStorage? wallet,
    int? index,
    String? to,
    int? amount, {
    int? baseOperationCustomFee,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendTransaction,
          [
            wallet,
            index,
            to,
            amount,
          ],
          {#baseOperationCustomFee: baseOperationCustomFee},
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);
  @override
  _i4.Future<String> signMessage(
    _i5.WalletStorage? wallet,
    int? index,
    _i6.Uint8List? message,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signMessage,
          [
            wallet,
            index,
            message,
          ],
        ),
        returnValue: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<_i2.Operation> getFa2TransferOperation(
    String? contract,
    String? from,
    String? to,
    String? tokenId,
    int? quantity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFa2TransferOperation,
          [
            contract,
            from,
            to,
            tokenId,
            quantity,
          ],
        ),
        returnValue: _i4.Future<_i2.Operation>.value(_FakeOperation_0(
          this,
          Invocation.method(
            #getFa2TransferOperation,
            [
              contract,
              from,
              to,
              tokenId,
              quantity,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Operation>);
}
