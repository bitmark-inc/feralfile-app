// Mocks generated by Mockito 5.4.4 from annotations
// in autonomy_flutter/test/generate_mock/service/mock_feral_file_service.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;

import 'package:autonomy_flutter/model/dailies.dart' as _i12;
import 'package:autonomy_flutter/model/explore_statistics_data.dart' as _i8;
import 'package:autonomy_flutter/model/ff_account.dart' as _i3;
import 'package:autonomy_flutter/model/ff_artwork.dart' as _i6;
import 'package:autonomy_flutter/model/ff_exhibition.dart' as _i4;
import 'package:autonomy_flutter/model/ff_list_response.dart' as _i5;
import 'package:autonomy_flutter/model/ff_series.dart' as _i2;
import 'package:autonomy_flutter/model/ff_user.dart' as _i7;
import 'package:autonomy_flutter/screen/feralfile_home/filter_bar.dart' as _i11;
import 'package:autonomy_flutter/service/feralfile_service.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFFSeries_0 extends _i1.SmartFake implements _i2.FFSeries {
  _FakeFFSeries_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFeralFileResaleInfo_1 extends _i1.SmartFake
    implements _i3.FeralFileResaleInfo {
  _FakeFeralFileResaleInfo_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeExhibition_2 extends _i1.SmartFake implements _i4.Exhibition {
  _FakeExhibition_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFeralFileListResponse_3<T> extends _i1.SmartFake
    implements _i5.FeralFileListResponse<T> {
  _FakeFeralFileListResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeArtwork_4 extends _i1.SmartFake implements _i6.Artwork {
  _FakeArtwork_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFFUserDetails_5 extends _i1.SmartFake implements _i7.FFUserDetails {
  _FakeFFUserDetails_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeExploreStatisticsData_6 extends _i1.SmartFake
    implements _i8.ExploreStatisticsData {
  _FakeExploreStatisticsData_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FeralFileService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFeralFileService extends _i1.Mock implements _i9.FeralFileService {
  MockFeralFileService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Future<_i2.FFSeries> getSeries(
    String? id, {
    String? exhibitionID,
    bool? includeFirstArtwork = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSeries,
          [id],
          {
            #exhibitionID: exhibitionID,
            #includeFirstArtwork: includeFirstArtwork,
          },
        ),
        returnValue: _i10.Future<_i2.FFSeries>.value(_FakeFFSeries_0(
          this,
          Invocation.method(
            #getSeries,
            [id],
            {
              #exhibitionID: exhibitionID,
              #includeFirstArtwork: includeFirstArtwork,
            },
          ),
        )),
      ) as _i10.Future<_i2.FFSeries>);
  @override
  _i10.Future<List<_i2.FFSeries>> getListSeries(
    String? exhibitionId, {
    bool? includeFirstArtwork = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getListSeries,
          [exhibitionId],
          {#includeFirstArtwork: includeFirstArtwork},
        ),
        returnValue: _i10.Future<List<_i2.FFSeries>>.value(<_i2.FFSeries>[]),
      ) as _i10.Future<List<_i2.FFSeries>>);
  @override
  _i10.Future<_i4.Exhibition?> getExhibitionFromTokenID(String? artworkID) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExhibitionFromTokenID,
          [artworkID],
        ),
        returnValue: _i10.Future<_i4.Exhibition?>.value(),
      ) as _i10.Future<_i4.Exhibition?>);
  @override
  _i10.Future<_i3.FeralFileResaleInfo> getResaleInfo(String? exhibitionID) =>
      (super.noSuchMethod(
        Invocation.method(
          #getResaleInfo,
          [exhibitionID],
        ),
        returnValue: _i10.Future<_i3.FeralFileResaleInfo>.value(
            _FakeFeralFileResaleInfo_1(
          this,
          Invocation.method(
            #getResaleInfo,
            [exhibitionID],
          ),
        )),
      ) as _i10.Future<_i3.FeralFileResaleInfo>);
  @override
  _i10.Future<String?> getPartnerFullName(String? exhibitionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPartnerFullName,
          [exhibitionId],
        ),
        returnValue: _i10.Future<String?>.value(),
      ) as _i10.Future<String?>);
  @override
  _i10.Future<_i4.Exhibition> getExhibition(
    String? id, {
    bool? includeFirstArtwork = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExhibition,
          [id],
          {#includeFirstArtwork: includeFirstArtwork},
        ),
        returnValue: _i10.Future<_i4.Exhibition>.value(_FakeExhibition_2(
          this,
          Invocation.method(
            #getExhibition,
            [id],
            {#includeFirstArtwork: includeFirstArtwork},
          ),
        )),
      ) as _i10.Future<_i4.Exhibition>);
  @override
  _i10.Future<List<_i4.Exhibition>> getAllExhibitions({
    String? sortBy = r'openAt',
    String? sortOrder = r'DESC',
    int? limit = 8,
    int? offset = 0,
    String? keyword = r'',
    List<String>? relatedAccountIDs = const [],
    Map<_i11.FilterType, _i11.FilterValue>? filters = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllExhibitions,
          [],
          {
            #sortBy: sortBy,
            #sortOrder: sortOrder,
            #limit: limit,
            #offset: offset,
            #keywork: keyword,
            #relatedAccountIDs: relatedAccountIDs,
            #filters: filters,
          },
        ),
        returnValue:
            _i10.Future<List<_i4.Exhibition>>.value(<_i4.Exhibition>[]),
      ) as _i10.Future<List<_i4.Exhibition>>);
  @override
  _i10.Future<_i4.Exhibition> getSourceExhibition() => (super.noSuchMethod(
        Invocation.method(
          #getSourceExhibition,
          [],
        ),
        returnValue: _i10.Future<_i4.Exhibition>.value(_FakeExhibition_2(
          this,
          Invocation.method(
            #getSourceExhibition,
            [],
          ),
        )),
      ) as _i10.Future<_i4.Exhibition>);
  @override
  _i10.Future<_i4.Exhibition?> getUpcomingExhibition() => (super.noSuchMethod(
        Invocation.method(
          #getUpcomingExhibition,
          [],
        ),
        returnValue: _i10.Future<_i4.Exhibition?>.value(),
      ) as _i10.Future<_i4.Exhibition?>);
  @override
  _i10.Future<_i4.Exhibition> getFeaturedExhibition() => (super.noSuchMethod(
        Invocation.method(
          #getFeaturedExhibition,
          [],
        ),
        returnValue: _i10.Future<_i4.Exhibition>.value(_FakeExhibition_2(
          this,
          Invocation.method(
            #getFeaturedExhibition,
            [],
          ),
        )),
      ) as _i10.Future<_i4.Exhibition>);
  @override
  _i10.Future<List<_i4.Exhibition>> getOngoingExhibitions() =>
      (super.noSuchMethod(
        Invocation.method(
          #getOngoingExhibitions,
          [],
        ),
        returnValue:
            _i10.Future<List<_i4.Exhibition>>.value(<_i4.Exhibition>[]),
      ) as _i10.Future<List<_i4.Exhibition>>);
  @override
  _i10.Future<List<_i6.Artwork>> getFeaturedArtworks() => (super.noSuchMethod(
        Invocation.method(
          #getFeaturedArtworks,
          [],
        ),
        returnValue: _i10.Future<List<_i6.Artwork>>.value(<_i6.Artwork>[]),
      ) as _i10.Future<List<_i6.Artwork>>);
  @override
  _i10.Future<_i5.FeralFileListResponse<_i6.Artwork>> getSeriesArtworks(
    String? seriesId,
    String? exhibitionID, {
    bool? withSeries = false,
    int? offset = 0,
    int? limit = 300,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSeriesArtworks,
          [
            seriesId,
            exhibitionID,
          ],
          {
            #withSeries: withSeries,
            #offset: offset,
            #limit: limit,
          },
        ),
        returnValue: _i10.Future<_i5.FeralFileListResponse<_i6.Artwork>>.value(
            _FakeFeralFileListResponse_3<_i6.Artwork>(
          this,
          Invocation.method(
            #getSeriesArtworks,
            [
              seriesId,
              exhibitionID,
            ],
            {
              #withSeries: withSeries,
              #offset: offset,
              #limit: limit,
            },
          ),
        )),
      ) as _i10.Future<_i5.FeralFileListResponse<_i6.Artwork>>);
  @override
  _i10.Future<_i6.Artwork?> getFirstViewableArtwork(String? seriesId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getFirstViewableArtwork,
          [seriesId],
        ),
        returnValue: _i10.Future<_i6.Artwork?>.value(),
      ) as _i10.Future<_i6.Artwork?>);
  @override
  _i10.Future<_i6.Artwork> getArtwork(String? artworkId) => (super.noSuchMethod(
        Invocation.method(
          #getArtwork,
          [artworkId],
        ),
        returnValue: _i10.Future<_i6.Artwork>.value(_FakeArtwork_4(
          this,
          Invocation.method(
            #getArtwork,
            [artworkId],
          ),
        )),
      ) as _i10.Future<_i6.Artwork>);
  @override
  _i10.Future<_i12.DailyToken?> getCurrentDailiesToken() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentDailiesToken,
          [],
        ),
        returnValue: _i10.Future<_i12.DailyToken?>.value(),
      ) as _i10.Future<_i12.DailyToken?>);
  @override
  _i10.Future<_i5.FeralFileListResponse<_i2.FFSeries>> exploreArtworks({
    String? sortBy,
    String? sortOrder,
    String? keyword = r'',
    int? limit = 300,
    int? offset = 0,
    bool? includeArtist = true,
    bool? includeExhibition = true,
    bool? includeFirstArtwork = true,
    bool? onlyViewable = true,
    List<String>? artistIds = const [],
    bool? includeUniqeFilePath = true,
    Map<_i11.FilterType, _i11.FilterValue>? filters = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #exploreArtworks,
          [],
          {
            #sortBy: sortBy,
            #sortOrder: sortOrder,
            #keyword: keyword,
            #limit: limit,
            #offset: offset,
            #includeArtist: includeArtist,
            #includeExhibition: includeExhibition,
            #includeFirstArtwork: includeFirstArtwork,
            #onlyViewable: onlyViewable,
            #artistIds: artistIds,
            #includeUniqeFilePath: includeUniqeFilePath,
            #filters: filters,
          },
        ),
        returnValue: _i10.Future<_i5.FeralFileListResponse<_i2.FFSeries>>.value(
            _FakeFeralFileListResponse_3<_i2.FFSeries>(
          this,
          Invocation.method(
            #exploreArtworks,
            [],
            {
              #sortBy: sortBy,
              #sortOrder: sortOrder,
              #keyword: keyword,
              #limit: limit,
              #offset: offset,
              #includeArtist: includeArtist,
              #includeExhibition: includeExhibition,
              #includeFirstArtwork: includeFirstArtwork,
              #onlyViewable: onlyViewable,
              #artistIds: artistIds,
              #includeUniqeFilePath: includeUniqeFilePath,
              #filters: filters,
            },
          ),
        )),
      ) as _i10.Future<_i5.FeralFileListResponse<_i2.FFSeries>>);
  @override
  _i10.Future<_i5.FeralFileListResponse<_i7.FFArtist>> exploreArtists({
    int? limit = 20,
    int? offset = 0,
    String? keywork = r'',
    String? orderBy = r'relevance',
    String? sortOrder = r'DESC',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #exploreArtists,
          [],
          {
            #limit: limit,
            #offset: offset,
            #keywork: keywork,
            #orderBy: orderBy,
            #sortOrder: sortOrder,
          },
        ),
        returnValue: _i10.Future<_i5.FeralFileListResponse<_i7.FFArtist>>.value(
            _FakeFeralFileListResponse_3<_i7.FFArtist>(
          this,
          Invocation.method(
            #exploreArtists,
            [],
            {
              #limit: limit,
              #offset: offset,
              #keywork: keywork,
              #orderBy: orderBy,
              #sortOrder: sortOrder,
            },
          ),
        )),
      ) as _i10.Future<_i5.FeralFileListResponse<_i7.FFArtist>>);
  @override
  _i10.Future<_i5.FeralFileListResponse<_i7.FFCurator>> exploreCurators({
    int? limit = 20,
    int? offset = 0,
    String? keywork = r'',
    String? orderBy = r'relevance',
    String? sortOrder = r'DESC',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #exploreCurators,
          [],
          {
            #limit: limit,
            #offset: offset,
            #keywork: keywork,
            #orderBy: orderBy,
            #sortOrder: sortOrder,
          },
        ),
        returnValue:
            _i10.Future<_i5.FeralFileListResponse<_i7.FFCurator>>.value(
                _FakeFeralFileListResponse_3<_i7.FFCurator>(
          this,
          Invocation.method(
            #exploreCurators,
            [],
            {
              #limit: limit,
              #offset: offset,
              #keywork: keywork,
              #orderBy: orderBy,
              #sortOrder: sortOrder,
            },
          ),
        )),
      ) as _i10.Future<_i5.FeralFileListResponse<_i7.FFCurator>>);
  @override
  _i10.Future<_i7.FFUserDetails> getUser(String? artistID) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [artistID],
        ),
        returnValue: _i10.Future<_i7.FFUserDetails>.value(_FakeFFUserDetails_5(
          this,
          Invocation.method(
            #getUser,
            [artistID],
          ),
        )),
      ) as _i10.Future<_i7.FFUserDetails>);
  @override
  _i10.Future<List<_i4.Post>> getPosts({
    String? sortBy = r'dateTime',
    String? sortOrder = r'',
    List<String>? types = const [],
    List<String>? relatedAccountIds = const [],
    bool? includeExhibition = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPosts,
          [],
          {
            #sortBy: sortBy,
            #sortOrder: sortOrder,
            #types: types,
            #relatedAccountIds: relatedAccountIds,
            #includeExhibition: includeExhibition,
          },
        ),
        returnValue: _i10.Future<List<_i4.Post>>.value(<_i4.Post>[]),
      ) as _i10.Future<List<_i4.Post>>);
  @override
  _i10.Future<_i8.ExploreStatisticsData> getExploreStatistics({
    bool? unique = true,
    bool? excludedFF = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getExploreStatistics,
          [],
          {
            #unique: unique,
            #excludedFF: excludedFF,
          },
        ),
        returnValue: _i10.Future<_i8.ExploreStatisticsData>.value(
            _FakeExploreStatisticsData_6(
          this,
          Invocation.method(
            #getExploreStatistics,
            [],
            {
              #unique: unique,
              #excludedFF: excludedFF,
            },
          ),
        )),
      ) as _i10.Future<_i8.ExploreStatisticsData>);
}
